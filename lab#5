let currentMatrix = [
  [1, 1, 1],
  [1, 2, 2],
  [1, 0, 3]
]

function transposeMatrix(matrix) {
  return matrix[0].map((_, colIndex) => matrix.map(row => row[colIndex]));
}

function multiplyMatrices(A, B) {
  var result = new Array(A.length).fill(0).map(row => new Array(B[0].length).fill(0));
  return result.map((row, i) => {
    return row.map((val, j) => {
      return A[i].reduce((sum, elm, k) => sum + (elm * B[k][j]), 0)
    })
  })
}

let transposedMatrix = transposeMatrix(currentMatrix);

let matrix = (!(currentMatrix > transposedMatrix || currentMatrix < transposedMatrix)) ?
  currentMatrix : multiplyMatrices(currentMatrix, transposeMatrix(currentMatrix));
console.log(matrix);
