//node lab#5
let k = 28; m = 9;

let A = [
  /* [18, -11, -17],
  [-11, 86, -58],
  [-17, -58, 266] */
  [-4, 1, 1],
  [1, -9, 3],
  [1, 2, -16]
  /* [12 + k, 2, m / 4, 1, 2],
  [4, 113 + k, 1, m / 10, m - 4],
  [1, 2, -24 - k, 3, 4],
  [1, 2 / m, 4, 33 + k, 4],
  [-1, 2, -3, 3 + m, -44 - k] */
];

let b = [2, 5, 13];
//let b = [1, 2, 3, 4, 5];
//[10, -17, -191]

let round = num => Math.round(num * 100) / 100;

function transposeMatrix(matrix) {
  return matrix[0].map((_, colIndex) => matrix.map(row => row[colIndex]));
}

function multiplyMatrices(A, B) {
  console.log('___A___\n', A);
  console.log('___transposed___\n', b);
  var result = new Array(A.length).fill(0).map(row => new Array(B[0].length).fill(0));
  return result.map((row, i) => {
    return row.map((val, j) => {
      return A[i].reduce((sum, elem, k) => round(sum + (elem * B[k][j])), 0)
    })
  })
}

function multiplyMatrixByVector(A, b) {
  var result = new Array(b.length).fill(0);
  return result.map((row, i) => {
    return A[i].reduce((sum, elem, k) => {
      return round(sum + (elem * b[k]))
    }, 0)
  })
}

let transposedMatrix = transposeMatrix(A);

if (A > transposedMatrix || A < transposedMatrix) {
  A = multiplyMatrices(transposedMatrix, A);
  b = multiplyMatrixByVector(transposedMatrix, b);
}
console.log('___A___\n', A);
console.log('___b___\n', b);

//
//прямой ход
//

let n = A[0].length;

let T = new Array(n).fill(0).map(row => new Array(n).fill(0));

T[0][0] = round(Math.pow(A[0][0], 0.5));

for (let j = 1; j < n; j++) {
  T[0][j] = round(A[0][j] / T[0][0]);
}

for (let i = 1; i < n; i++) {
  let sum = 0;
  for (let k = 0; k < i; k++) {
    sum += Math.pow(T[k][i], 2)
  }
  T[i][i] = round(Math.pow(A[i][i] - sum, 0.5))
  for (let j = i + 1; j < n; j++) {
    let sum = 0;
    for (let k = 0; k < i; k++)
      sum += T[k][i] * T[k][j];
    T[i][j] = round((A[i][j] - sum) / T[i][i])
  }
}

console.log('___T___\n', T)

//
//обратный ход
//

let y = new Array(n).fill(0);

y[0] = round(b[0] / T[0][0]);

for (let i = 1; i < n; i++) {
  let sum = 0;
  for (let k = 0; k < i; k++) {
    sum += T[k][i] * y[k]
  }
  y[i] = round((b[i] - sum) / T[i][i])
}

console.log('___y___\n', y)

let x = new Array(n).fill(0);

x[n - 1] = round(y[n - 1] / T[n - 1][n - 1]);

for (let i = n - 1; i > -1; i--) {
  let sum = 0;
  for (let k = i + 1; k < n; k++) {
    sum += T[i][k] * x[k]
  }
  x[i] = round((y[i] - sum) / T[i][i])
}

console.log('___x___\n', x)